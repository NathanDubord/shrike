{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nathan/shrike/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nathan/shrike/client/src/pages/landing/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: null\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/express_backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Welcome to React\")), \"// Render the newly fetched data inside of this.state.data\", React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.state.data));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Nathan/shrike/client/src/pages/landing/App.js"],"names":["React","Component","App","state","data","callBackendAPI","fetch","response","json","body","status","Error","message","then","res","setState","express","catch","err","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,IAAI,EAAE;AADC,K;UAYRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOC,KAAK,CAAC,kBAAD,CADZ;;AAAA;AACVC,cAAAA,QADU;AAAA;AAAA,qBAEGA,QAAQ,CAACC,IAAT,EAFH;;AAAA;AAEVC,cAAAA,IAFU;;AAAA,oBAIZF,QAAQ,CAACG,MAAT,KAAoB,GAJR;AAAA;AAAA;AAAA;;AAAA,oBAKTC,KAAK,CAACF,IAAI,CAACG,OAAN,CALI;;AAAA;AAAA,+CAOTH,IAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCARG;AAAA;;AACnB;AACA,WAAKJ,cAAL,GACEQ,IADF,CACO,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,IAAI,EAAEU,GAAG,CAACE;AAAZ,SAAd,CAAJ;AAAA,OADV,EAEEC,KAFF,CAEQ,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFX;AAGA,K,CAED;;;;6BAWS;AACR,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADD,gEAKC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKf,KAAL,CAAWC,IAArC,CALD,CADD;AASA;;;;EAjCgBH,S;;AAoClB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tdata: null,\n\t};\n\n\tcomponentDidMount() {\n\t\t// Call our fetch function below once the component mounts\n\t\tthis.callBackendAPI()\n\t\t\t.then(res => this.setState({ data: res.express }))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\t// Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\tcallBackendAPI = async () => {\n\t\tconst response = await fetch('/express_backend');\n\t\tconst body = await response.json();\n\n\t\tif (response.status !== 200) {\n\t\t\tthrow Error(body.message);\n\t\t}\n\t\treturn body;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1 className=\"App-title\">Welcome to React</h1>\n\t\t\t\t</header>\n\t\t\t\t// Render the newly fetched data inside of this.state.data \n\t\t\t\t<p className=\"App-intro\">{this.state.data}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}